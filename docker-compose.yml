version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pindrop-postgres
    environment:
      POSTGRES_DB: myapp_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - pindrop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d myapp_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pindrop-backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: myapp_db
      DB_SSL: false
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pindrop-network
    command: npm run dev

volumes:
  postgres_data:

networks:
  pindrop-network:
    driver: bridge